{"version":3,"sources":["app.module.js","core/core.module.js","vinyl/vinyl.module.js","core/config.js","core/constants.js","vinyl/vinyl.js","vinyl/vinyl.service.js"],"names":[],"mappings":"CAAA,WACA,YAEA,SAAA,OAAA,YACA,gBAKA,sBAGA,WCXA,YAEA,SAAA,OAAA,iBAIA,YAAA,YAAA,aAAA,aAQA,WACA,YACA,eAGA,WCnBA,YAEA,SAAA,OAAA,wBACA,WCHA,YAcA,SAAA,GAAA,EAAA,GAEA,EAAA,UAAA,KAIA,EACA,MAAA,SACA,IAAA,SACA,YAAA,+BACA,WAAA,QACA,aAAA,UAvBA,GAAA,GAAA,QAAA,OAAA,iBAEA,GACA,SAAA,sBACA,QAAA,QAGA,GAAA,MAAA,SAAA,GAEA,EAAA,OAAA,wDAiBA,WC5BA,YAEA,SACA,OAAA,iBACA,SAAA,eAAA,gDCJA,WACA,YAOA,SAAA,GAAA,EAAA,EAAA,GAiCA,QAAA,KACA,EAAA,OAAA,EAAA,QAAA,KAAA,WACA,EAAA,QACA,MAAA,GACA,OAAA,IAEA,EAAA,OAAA,OACA,EAAA,YAAA,WAMA,QAAA,GAAA,GACA,EAAA,OAAA,GACA,EAAA,OAAA,OACA,EAAA,YAAA,SA9CA,GAAA,GAAA,IAEA,GAAA,QACA,MAAA,GACA,OAAA,IAEA,EAAA,aAAA,EACA,EAAA,aAAA,EAGA,EAAA,YAAA,GAAA,IACA,KAAA,EACA,MAAA,EACA,SACA,MAAA,SAGA,MAAA,GACA,QAAA,SAAA,EAAA,GACA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,UAAA,KAAA,SAAA,GAGA,EAAA,OAAA,EAAA,EAAA,OAAA,GAAA,IACA,EAAA,QAAA,QA/BA,QACA,OAAA,kBACA,WAAA,QAAA,4DAwDA,WC7DA,YAOA,SAAA,GAAA,EAAA,GACA,GAAA,GAAA,GAAA,UAAA,EAAA,WACA,EAAA,EAAA,GAAA,WAEA,GACA,IAAA,EACA,IAAA,SAAA,EAAA,GACA,GAAA,GAAA,SAAA,EAAA,OACA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,MAAA,IAAA,UAEA,OAAA,IAEA,OAAA,SAAA,GACA,MAAA,GAAA,KAAA,IAEA,KAAA,SAAA,GACA,MAAA,GAAA,EAAA,MAAA,IAAA,aAEA,SAAA,SAAA,GACA,MAAA,GAAA,MAAA,EAAA,KAAA,UAIA,OAAA,GA5BA,QACA,OAAA,kBACA,QAAA,eAAA","file":"my-vinyl-collection.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('my-vinyl', [\n    'my-vinyl.core',\n\n    /*\n     * Feature areas\n     */\n    'my-vinyl.vinyl'\n  ]);\n\n})();","(function() {\n  'use strict';\n\n  angular.module('my-vinyl.core', [\n    /*\n     * Angular modules\n     */\n    'ngAnimate', 'ngCookies', 'ngResource', 'ngSanitize',\n    /*\n     * Our reusable cross app code modules\n     */\n\n    /*\n     * 3rd Party modules\n     */\n    'firebase',\n    'ui.router',\n    'ngTable'\n  ]);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('my-vinyl.vinyl', []);\n})();","(function() {\n  'use strict';\n\n  var core = angular.module('my-vinyl.core');\n\n  var config = {\n    appTitle: 'my Vinyl Collection',\n    version: '1.0.0'\n  };\n\n  core.value('config', config);\n\n  core.config(configure);\n\n  /* @ngInject */\n  function configure ($stateProvider, $urlRouterProvider) {\n    // For any unmatched url, redirect to /start\n    $urlRouterProvider.otherwise('/');\n\n\n    // Setup states\n    $stateProvider\n      .state('vinyl', {\n        url: '/vinyl',\n        templateUrl: 'js/partials/vinyl/vinyl.html',\n        controller: 'Vinyl',\n        controllerAs: 'vinyl'\n      });\n  }\n})();","(function() {\n  'use strict';\n\n  angular\n    .module('my-vinyl.core')\n    .constant('FIREBASE_URL', 'https://blinding-torch-79.firebaseio.com/');\n})();","/*jshint newcap:false*/\n(function() {\n  'use strict';\n\n  angular\n    .module('my-vinyl.vinyl')\n    .controller('Vinyl', Vinyl);\n\n  /* @ngInject */\n  function Vinyl($timeout, vinylService, ngTableParams) {\n\n    /*jshint validthis: true */\n    var vm = this;\n\n    vm.record = {\n      title: '',\n      artist: ''\n    };\n    vm.submitRecord = submitRecord;\n    vm.deleteRecord = deleteRecord;\n\n    // Set table params to use with ngTable\n    vm.tableParams = new ngTableParams({\n      page: 1,            // show first page\n      count: 5,          // count per page\n      sorting: {\n        title: 'asc'      // initial sorting\n      }\n    }, {\n      total: 10, // length of data\n      getData: function ($defer, params) {\n        vinylService.get(params.url(), vm.lastId).$loaded().then(function(data) {\n          // update table params\n          // set new data\n          vm.lastId = data[data.length-1].$id;\n          $defer.resolve(data);\n        });\n      }\n    });\n\n\n    // Create a new record\n    function submitRecord() {\n      vinylService.create(vm.record).then(function () {\n        vm.record = {\n          title: '',\n          artist: ''\n        };\n        vm.lastId = undefined;\n        vm.tableParams.reload();\n      });\n\n    }\n\n    // Delete a record\n    function deleteRecord(record) {\n      vinylService.delete(record);\n      vm.lastId = undefined;\n      vm.tableParams.reload();\n    }\n\n  }\n})();","(function() {\n  'use strict';\n\n  angular\n    .module('my-vinyl.vinyl')\n    .factory('vinylService', vinylService);\n\n  /* @ngInject */\n  function vinylService($firebase, FIREBASE_URL) {\n    var ref = new Firebase(FIREBASE_URL + 'records'),\n      records = $firebase(ref).$asArray();\n\n    var service = {\n      all: records,\n      get: function(params, lastId) {\n        var limit = parseInt(params.count),\n          limitedRecords = $firebase(ref.startAt(null, lastId).limit(limit)).$asArray();\n\n        return limitedRecords;\n      },\n      create: function (record) {\n        return records.$add(record);\n      },\n      find: function (recordId) {\n        return $firebase(ref.child(recordId)).$asObject();\n      },\n      delete: function (record) {\n        return ref.child(record.$id).remove();\n      }\n    };\n\n    return service;\n  }\n})();"],"sourceRoot":"/source/"}